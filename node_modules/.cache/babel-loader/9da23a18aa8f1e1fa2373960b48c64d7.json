{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\sajeeb\\\\client\\\\src\\\\Dashboard\\\\Review\\\\Review.js\",\n    _s = $RefreshSig$();\n\nimport { Rating, TextField, Typography, Button, Alert } from \"@mui/material\";\nimport React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport useAuth from \"../../Hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Review = () => {\n  _s();\n\n  const [value, setValue] = React.useState(0);\n  const [comment, setComment] = React.useState(\"\");\n  const [success, setSuccess] = React.useState(false);\n  const {\n    user\n  } = useAuth();\n\n  const handleComment = e => {\n    e.preventDefault();\n    console.log(comment, value);\n    const review = {\n      name: user.displayName,\n      comment: comment,\n      rating: value\n    };\n    fetch(\"https://polar-savannah-62685.herokuapp.com/user/review\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify(review)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setComment(\"\");\n      setValue(0);\n      setSuccess(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        textAlign: \"center\",\n        marginTop: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Give your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-multiline-static\",\n        label: \"Your Comment \",\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        multiline: true,\n        rows: 4,\n        style: {\n          width: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"legend\",\n        children: \"Your Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {\n        name: \"simple-controlled\",\n        value: value,\n        onChange: (event, newValue) => {\n          setValue(newValue);\n        },\n        precision: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleComment,\n        variant: \"contained\",\n        style: {\n          width: \"40%\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: \"Your Comment Successfully Submitted.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Review, \"uROgeOzXQfcrjJVjeqrXG6lU9KI=\", false, function () {\n  return [useAuth];\n});\n\n_c = Review;\nexport default Review;\n\nvar _c;\n\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"sources":["C:/Projects/sajeeb/client/src/Dashboard/Review/Review.js"],"names":["Rating","TextField","Typography","Button","Alert","React","Container","useAuth","Review","value","setValue","useState","comment","setComment","success","setSuccess","user","handleComment","e","preventDefault","console","log","review","name","displayName","rating","fetch","headers","method","body","JSON","stringify","then","res","json","data","textAlign","marginTop","target","width","event","newValue"],"mappings":"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","sourcesContent":["import { Rating, TextField, Typography, Button, Alert } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport useAuth from \"../../Hooks/useAuth\";\r\n\r\n\r\nconst Review = () => {\r\n\r\n    const [value, setValue] = React.useState(0);\r\n    const [comment, setComment] = React.useState(\"\");\r\n    const [success, setSuccess] = React.useState(false);\r\n    const { user } = useAuth();\r\n\r\n\r\n\r\n\r\n    const handleComment = (e) => {\r\n        e.preventDefault();\r\n        console.log(comment, value);\r\n        const review = {\r\n            name: user.displayName,\r\n            comment: comment,\r\n            rating: value,\r\n        };\r\n        fetch(\"https://polar-savannah-62685.herokuapp.com/user/review\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(review),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                setComment(\"\");\r\n                setValue(0);\r\n                setSuccess(true);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container style={{ textAlign: \"center\", marginTop: 100 }}>\r\n                <h1>Give your Comment</h1>\r\n                <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Your Comment \"\r\n                    value={comment}\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                    multiline\r\n                    rows={4}\r\n                    style={{ width: \"50%\" }}\r\n                />{\" \"}\r\n                <br />\r\n                <Typography component=\"legend\">Your Rating</Typography>\r\n                <Rating\r\n                    name=\"simple-controlled\"\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    precision={0.5}\r\n                />\r\n                <br />\r\n                <Button\r\n                    onClick={handleComment}\r\n                    variant=\"contained\"\r\n                    style={{ width: \"40%\" }}\r\n                >\r\n                    Submit\r\n                </Button>\r\n                {success && (\r\n                    <Alert severity=\"success\">\r\n                        Your Comment Successfully Submitted.....\r\n                    </Alert>\r\n                )}\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Review;"]},"metadata":{},"sourceType":"module"}