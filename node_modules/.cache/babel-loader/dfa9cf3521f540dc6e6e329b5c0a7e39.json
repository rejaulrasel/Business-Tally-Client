{"ast":null,"code":"import _slicedToArray from\"C:/Projects/client-niche-product-website-assignment-12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{getAuth,createUserWithEmailAndPassword,signInWithEmailAndPassword,onAuthStateChanged,GoogleAuthProvider,signInWithPopup,updateProfile,signOut}from\"firebase/auth\";import initializeAuthentication from'../Pages/Login/Firebase/Firebase.init';initializeAuthentication();var useFirebase=function useFirebase(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),authError=_useState4[0],setAuthError=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),admin=_useState8[0],setAdmin=_useState8[1];var auth=getAuth();var googleProvider=new GoogleAuthProvider();var registerUser=function registerUser(email,password,name,history){setIsLoading(true);createUserWithEmailAndPassword(auth,email,password).then(function(userCredential){setAuthError('');var newUser={email:email,displayName:name};setUser(newUser);//Save user to the database\nsaveUser(email,name,'POST');// send name to firebase after creation\nupdateProfile(auth.currentUser,{displayName:name}).then(function(){}).catch(function(error){});history.replace('/');}).catch(function(error){setAuthError(error.message);console.log(error);}).finally(function(){return setIsLoading(false);});};var loginUser=function loginUser(email,password,location,history){setIsLoading(true);signInWithEmailAndPassword(auth,email,password).then(function(userCredential){var _location$state;var destination=(location===null||location===void 0?void 0:(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.from)||'/';history.replace(destination);setAuthError('');}).catch(function(error){setAuthError(error.message);}).finally(function(){return setIsLoading(false);});};var signInWithGoogle=function signInWithGoogle(location,history){setIsLoading(true);signInWithPopup(auth,googleProvider).then(function(result){var _location$state2;var user=result.user;saveUser(user.email,user.displayName,'PUT');var destination=(location===null||location===void 0?void 0:(_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.from)||'/';history.replace(destination);setAuthError('');}).catch(function(error){setAuthError(error.message);}).finally(function(){return setIsLoading(false);});};// observer user state\nuseEffect(function(){var unsubscribed=onAuthStateChanged(auth,function(user){if(user){setUser(user);}else{setUser({});}setIsLoading(false);});return function(){return unsubscribed;};},[]);useEffect(function(){fetch(\"https://calm-dawn-94337.herokuapp.com/users/\".concat(user.email)).then(function(res){return res.json();}).then(function(data){return setAdmin(data.admin);});},[user.email]);var logout=function logout(){setIsLoading(true);signOut(auth).then(function(){}).catch(function(error){}).finally(function(){return setIsLoading(false);});};var saveUser=function saveUser(email,displayName,method){var user={email:email,displayName:displayName};fetch('https://calm-dawn-94337.herokuapp.com/users',{method:method,headers:{'content-type':'application/json'},body:JSON.stringify(user)}).then();};return{user:user,isLoading:isLoading,authError:authError,admin:admin,registerUser:registerUser,loginUser:loginUser,signInWithGoogle:signInWithGoogle,logout:logout};};export default useFirebase;","map":{"version":3,"sources":["C:/Projects/client-niche-product-website-assignment-12/src/Hooks/useFirebase.js"],"names":["useEffect","useState","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","GoogleAuthProvider","signInWithPopup","updateProfile","signOut","initializeAuthentication","useFirebase","user","setUser","authError","setAuthError","isLoading","setIsLoading","admin","setAdmin","auth","googleProvider","registerUser","email","password","name","history","then","userCredential","newUser","displayName","saveUser","currentUser","catch","error","replace","message","console","log","finally","loginUser","location","destination","state","from","signInWithGoogle","result","unsubscribed","fetch","res","json","data","logout","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, GoogleAuthProvider, signInWithPopup, updateProfile, signOut } from \"firebase/auth\";\r\nimport initializeAuthentication from '../Pages/Login/Firebase/Firebase.init';\r\n\r\n\r\n\r\ninitializeAuthentication();\r\n\r\n\r\n\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState({});\r\n    const [authError, setAuthError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [admin, setAdmin] = useState(false)\r\n\r\n\r\n    const auth = getAuth();\r\n    const googleProvider = new GoogleAuthProvider();\r\n\r\n\r\n    const registerUser = (email, password, name, history) => {\r\n        setIsLoading(true);\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                setAuthError('');\r\n                const newUser = { email, displayName: name };\r\n                setUser(newUser);\r\n                //Save user to the database\r\n                saveUser(email, name, 'POST')\r\n                // send name to firebase after creation\r\n                updateProfile(auth.currentUser, {\r\n                    displayName: name\r\n                }).then(() => {\r\n                }).catch((error) => {\r\n                });\r\n                history.replace('/');\r\n            })\r\n            .catch((error) => {\r\n                setAuthError(error.message);\r\n                console.log(error);\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n\r\n    const loginUser = (email, password, location, history) => {\r\n        setIsLoading(true);\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                const destination = location?.state?.from || '/';\r\n                history.replace(destination);\r\n                setAuthError('');\r\n            })\r\n            .catch((error) => {\r\n                setAuthError(error.message);\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n\r\n    const signInWithGoogle = (location, history) => {\r\n        setIsLoading(true);\r\n        signInWithPopup(auth, googleProvider)\r\n            .then((result) => {\r\n                const user = result.user;\r\n                saveUser(user.email , user.displayName, 'PUT');\r\n                const destination = location?.state?.from || '/';\r\n                history.replace(destination);\r\n                setAuthError('');\r\n            }).catch((error) => {\r\n                setAuthError(error.message);\r\n            }).finally(() => setIsLoading(false));\r\n    }\r\n\r\n    // observer user state\r\n    useEffect(() => {\r\n        const unsubscribed = onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setUser(user);\r\n            } else {\r\n                setUser({})\r\n            }\r\n            setIsLoading(false);\r\n        });\r\n        return () => unsubscribed;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(`https://calm-dawn-94337.herokuapp.com/users/${user.email}`)\r\n            .then(res => res.json())\r\n            .then(data => setAdmin(data.admin))\r\n    }, [user.email])\r\n\r\n    const logout = () => {\r\n        setIsLoading(true);\r\n        signOut(auth).then(() => {\r\n\r\n        }).catch((error) => {\r\n\r\n        })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n    const saveUser = (email,displayName,method) => {\r\n        const user = {email,displayName};\r\n        \r\n        fetch('https://calm-dawn-94337.herokuapp.com/users',{\r\n            method:method,\r\n            headers:{\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        })\r\n        .then()\r\n    }\r\n\r\n    return {\r\n        user,\r\n        isLoading,\r\n        authError,\r\n        admin,\r\n        registerUser,\r\n        loginUser,\r\n        signInWithGoogle,\r\n        logout,\r\n    }\r\n};\r\n\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}